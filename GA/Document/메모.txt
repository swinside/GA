굉장히 빠르게 수렴하는 경우도 있었다.
하지만 그 상태에서 Converge 조건을 만족하는데는 오히려 더 많은 시간이 거렸는데
대부분 이렇게 시간을 많이 끌게 될 경우 현재값보다는 좋은 것을 찾아내고 결국에는
종료조건에 이르게 되었다.

파라미터를 잘못주어서 여유가 없었음.
상당한 중독성을 가진 게임같았다.
시간만 더 있었으면 아마도 조금이라도 더 나은 parameter들을 구하기 위해
프로그램을 돌려놓고 조금씩 바뀌는 숫자들을 바라보며 하루종일 앉아 있었을 것이다.
5_1000 의 test의 경우는 문서를 작성하면서 실행시킨 것이라 그다지 통계가 좋지 않을 것으로 생각된다.
물론, parameter도 좀 아쉬운 점이 남는다. replace_bad_p 를 좀더 낮추어 주었으면 지금과 비슷한 품질의 해를 생성하면서도
훨씬 빠른 결과를 얻을 수 있었을 것이다.
어떤 test의 경우는 속도를 중시한 parameter들로 설정된 것들이 있고,
어떤 test의 경우는 좋은 품질의 해를 찾아내기 위한 쪽으로 맞추어 오래동안 탐색을 하도록 되어 있는데,
보다 체계적으로 parameter들의 변화에 따른 테스트 결과 비교 분석을 하지 못한점이 아쉬움으로 남는다.

대부분의 종료시간, 품질 조절은 replace_bad_p 와 pre_cut_count 로 할수 있었다.
너무 빨리 수렴하면, replace_bad_p 나 pre_cut_count 를 높혀주면 된다.
미세한 조절을 위해서는 replace_bad_p 를 이용하는 것이 좋고,
좀 큰 변화를 주려면 pre_cut_count 를 바꾸어주면 된다.

실제로 이러한 값들을 조절하면서 상당한 품질의 변화를 ( 속도나 결과값 ) 느낄 수 있었는데,
시간의 여유가 있었으면 이러한 비교를 좀더 할 수 있지 않았을까하는 아쉬움 또한 남는다.

숙제를 하면서 떠오른 것이지만, 이러한 parameter 값들에 대한 좋은 해를 구하기 위해
GA를 2중으로 사용할 수는 없을까 하는 생각이 들었다.

즉, GA를 실행시킬때마다 적절한parameter값들이 입력되어 평가할수 있는 통계수치가 나오게 되고,
GA를 실행시키는 프로그램은 자동적으로 보다 좋은 parameter들로 접근하게 되어,
결국 보다 좋은 parameter 를 사용한 GA는 최종적으로 좋은 품질의 해를 빨리 얻어낼 수 있게 된다.

또한 generational GA 에 가까운 기법을 썼는데 ( 25/30 ) 한꺼번에 25개씩 교체를 하다보니 BEST 품질은
generation 진행 회수에 대비하여 초반부에 훨씬 빨리 찾아 낼 수 있는 것 같았다.

한꺼번에 교환되는 염색체수를 무조건 늘려주거나, population 을 늘려준다고 해서 품질이 더 좋아진다는 것을 보장하지는 않았다.
population 은 30개정도, generation의 replacement크기는 25 정도가 적당하였다.

*****

한번씩 충분히 좋은 결과가 나왔음에도 converge 하지 못하는 경우가 있는데, 이것은 N개의 염색체가 1개의 솔루션을 나타내기 때문이라고 생각된다.
지금으로서는 좀 아쉬움이 남지만, 전체 population 에서의 좋은 품질의 비율로 조건을 검사하는 것은 같은 솔루션이지만 다른 표현으로 나타나 있는 것들이
뒤섞여 있을때에는 문제가 된다. 이러한 문제가 있다는 것은 그래프에서 좋은 품질의 비율이 급격이 증가 감소를 반복하는 것으로부터 직감할 수 있다.
즉, 전체 품질은 좋으나 표현형이 달라서 거의 종료 직전이지만, 교배를 통해 나쁜 염색체들이 교체되면서 비율이 떨어지기 때문이다. ( replace_bad 도 허용하고 있다. )
사실 그렇기 때문에 converge 비율은 1-replace_bad_p 보다는 큰 것이 좋다고 생각되지만 너무 클 경우는 염색체의 표현형이 많을 경우 best해의 비율로 계산할 경우 종료조건에의 문제가 발생하게 된다
그러므로, 이를 줄이기 위한 방법이 필요하고, 그래서 이번 테스트에서는 mutation_p 이나 replace_bad_p 를 특정 수준 이상이 되면 조금씩 줄여주는 방법을 취해서
여러가지 표현형으로 동일한 best 해를 표현하고 있더라도 결국에는 종료할 수 있도록 조건을 만들어 주고 있는 것이다.

*******
그리고 mutation의 경우 모든 바뀌는 모든 염색체의 gene 들에 대해 실행되는데,
그렇기 때문에 확률을 낮게 주는 편이다. 하지만 가끔씩 강력한 mutation 이 필요할 때도 있는데
( local optimum 을 벗어나 탐색공간을 넓히기 위해 ) 그 역할을 해주는 것이
replace 를 할때 나쁜 해를 특정 비율로 섞어 주는 것이라 생각된다.
좋은 염색체들끼리는 교배를 해도 그다지 품질이 높아지지 않는다는 점에 착안하여 시도하였다.
즉, 일부러 crossover 해서 만들어진 해들중에 나쁜 품질을 섞어 주는 것이다.
마치 어느 정도 안정을 잡아가려는 population 에 혼란을 불어넣어주는 샘이다.
나쁜 품질의 염색체가 다른 것들과 교배를 해서 더 좋아지는 것이 가능할 것이라 생각된다.
우수한 염색체만 가지고서는 꼭 더 우수한 염색체를 만든다는 것이 보장되지는 않는다.
물론, 나쁜 품질의 염색체를 넣었다고 해서 그것을 보장해주지는 못하지만 보다 다양한 탐색이 가능해진다.


